[
    {
        "id": "faaa4f54ed7597d7",
        "type": "tab",
        "label": "DATA IN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3559f90766b0184",
        "type": "tab",
        "label": "CHARTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3808b3b0abf131f7",
        "type": "group",
        "z": "faaa4f54ed7597d7",
        "name": "Guardado de data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "295b8eca5eb373be",
            "91b59430532c1fb5",
            "cbaa07d685e2a818",
            "118a58728bddf7e3",
            "5aab794bde737cdc",
            "43c8846d1ce04c26",
            "d39941b5f2d46475",
            "e0d359a9a7bf3392"
        ],
        "x": 64,
        "y": 359,
        "w": 962,
        "h": 202
    },
    {
        "id": "686d9ccfaccf762f",
        "type": "group",
        "z": "faaa4f54ed7597d7",
        "name": "DELETE ALL DATA MANUALLY (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "3f555f6973d84794",
            "cd4456431ea37fa3",
            "cfe38dfce77990e9"
        ],
        "x": 74,
        "y": 619,
        "w": 572,
        "h": 82
    },
    {
        "id": "cdf672981e934209",
        "type": "mqtt-broker",
        "name": "",
        "broker": "161.132.39.167",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "45598baf2af77f76",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "acme_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "1de59b82acd33bdc",
        "type": "mqtt in",
        "z": "faaa4f54ed7597d7",
        "name": "",
        "topic": "data/combined",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "cdf672981e934209",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "78de4fe532a7a1bd",
                "ab104395c0ed5919"
            ]
        ]
    },
    {
        "id": "78de4fe532a7a1bd",
        "type": "change",
        "z": "faaa4f54ed7597d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "6aaedab152bbc411"
            ]
        ]
    },
    {
        "id": "295b8eca5eb373be",
        "type": "function",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "function 103",
        "func": "\nmsg.topic = \"INSERT INTO `local_data` (`data`) VALUES ('\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "91b59430532c1fb5",
                "118a58728bddf7e3"
            ]
        ]
    },
    {
        "id": "91b59430532c1fb5",
        "type": "mysql",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 920,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "cbaa07d685e2a818",
        "type": "json",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 460,
        "wires": [
            [
                "295b8eca5eb373be"
            ]
        ]
    },
    {
        "id": "118a58728bddf7e3",
        "type": "debug",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 420,
        "wires": []
    },
    {
        "id": "5aab794bde737cdc",
        "type": "link in",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "",
        "links": [
            "7961799d126d1b31"
        ],
        "x": 105,
        "y": 460,
        "wires": [
            [
                "d39941b5f2d46475"
            ]
        ]
    },
    {
        "id": "43c8846d1ce04c26",
        "type": "debug",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "debug 123",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 400,
        "wires": []
    },
    {
        "id": "d39941b5f2d46475",
        "type": "function",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "Filter local data",
        "func": "let out_data = {}\n\nout_data.timestamp = msg.payload.timestamp;\nout_data.latitude = msg.payload.data.gps.latitude;\nout_data.longitude = msg.payload.data.gps.longitude;\nout_data.velocidad = msg.payload.data.gps.speed;\nout_data.carga = msg.payload.data.load;\nout_data.bateria = msg.payload.data.battery;\nout_data.presion_bar = msg.payload.data.pressure_bar;\nout_data.presion_psi = msg.payload.data.pressure_psi;\n// out_data.estado =\nmsg.payload = out_data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 460,
        "wires": [
            [
                "43c8846d1ce04c26",
                "cbaa07d685e2a818"
            ]
        ]
    },
    {
        "id": "e0d359a9a7bf3392",
        "type": "comment",
        "z": "faaa4f54ed7597d7",
        "g": "3808b3b0abf131f7",
        "name": "CORREGIR EL FILTER Y POR AHORA NO HABRA DATA LOCAL",
        "info": "",
        "x": 420,
        "y": 520,
        "wires": []
    },
    {
        "id": "3f555f6973d84794",
        "type": "inject",
        "z": "faaa4f54ed7597d7",
        "g": "686d9ccfaccf762f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 660,
        "wires": [
            [
                "cd4456431ea37fa3"
            ]
        ]
    },
    {
        "id": "cd4456431ea37fa3",
        "type": "function",
        "z": "faaa4f54ed7597d7",
        "g": "686d9ccfaccf762f",
        "name": "DELETE ALL",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 660,
        "wires": [
            [
                "cfe38dfce77990e9"
            ]
        ]
    },
    {
        "id": "cfe38dfce77990e9",
        "type": "mysql",
        "z": "faaa4f54ed7597d7",
        "g": "686d9ccfaccf762f",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 560,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7961799d126d1b31",
        "type": "link out",
        "z": "faaa4f54ed7597d7",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "5aab794bde737cdc"
        ],
        "x": 1215,
        "y": 180,
        "wires": []
    },
    {
        "id": "252f650c7464a3f8",
        "type": "change",
        "z": "faaa4f54ed7597d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filtered_data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "7961799d126d1b31"
            ]
        ]
    },
    {
        "id": "6aaedab152bbc411",
        "type": "function",
        "z": "faaa4f54ed7597d7",
        "name": "filtering",
        "func": "var data_json = msg.payload;\n\ndata_json.data.battery = data_json.data.battery.voltage/1000;\ndata_json.data.load = data_json.data.pressure.current/1000;\ndata_json.data.pressure_bar = (data_json.data.pressure.current-4000)*250/16000;\ndata_json.data.pressure_psi = (data_json.data.pressure.current-4000)*3625/16000;\n\nmsg.payload = data_json;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "252f650c7464a3f8",
                "a515eb7fd1cbdb66"
            ]
        ]
    },
    {
        "id": "a515eb7fd1cbdb66",
        "type": "debug",
        "z": "faaa4f54ed7597d7",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 200,
        "wires": []
    },
    {
        "id": "ab104395c0ed5919",
        "type": "debug",
        "z": "faaa4f54ed7597d7",
        "name": "debug 174",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 160,
        "wires": []
    },
    {
        "id": "1afd5cec81f07905",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            [
                "6e54ef6d06aa9daa"
            ]
        ]
    },
    {
        "id": "0691751ad43d6e19",
        "type": "http in",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "url": "/bell1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "1afd5cec81f07905"
            ]
        ]
    },
    {
        "id": "74c5e538fffdd527",
        "type": "http response",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1120,
        "y": 80,
        "wires": []
    },
    {
        "id": "6e54ef6d06aa9daa",
        "type": "mysql",
        "z": "f3559f90766b0184",
        "d": true,
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "ca7d08bcc5d1b252"
            ]
        ]
    },
    {
        "id": "ca7d08bcc5d1b252",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 120,
        "wires": [
            [
                "bacbbce613cf7a97",
                "4b4c206763080349"
            ]
        ]
    },
    {
        "id": "71e641b3de3dd236",
        "type": "debug",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "debug 164",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "bacbbce613cf7a97",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "to carga1",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = array_in[i].carga1;\n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 120,
        "wires": [
            [
                "71e641b3de3dd236",
                "74c5e538fffdd527"
            ]
        ]
    },
    {
        "id": "4b4c206763080349",
        "type": "debug",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "debug 165",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "4d4295502b9089fd",
        "type": "http in",
        "z": "f3559f90766b0184",
        "name": "",
        "url": "/status-loc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "58d05188537d097c"
            ]
        ]
    },
    {
        "id": "ee84a2afe42589e3",
        "type": "http in",
        "z": "f3559f90766b0184",
        "name": "",
        "url": "/speed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "d107c11a308aefca"
            ]
        ]
    },
    {
        "id": "2f2d9f304f7176ee",
        "type": "http in",
        "z": "f3559f90766b0184",
        "name": "",
        "url": "/load",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "1d176c38b3df1bd0"
            ]
        ]
    },
    {
        "id": "d107c11a308aefca",
        "type": "change",
        "z": "f3559f90766b0184",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtered_data.data.gps.speed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "1bb24772073ebcbc",
                "3e9ddb0cc7b53619"
            ]
        ]
    },
    {
        "id": "1bb24772073ebcbc",
        "type": "http response",
        "z": "f3559f90766b0184",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "3e9ddb0cc7b53619",
        "type": "debug",
        "z": "f3559f90766b0184",
        "name": "debug 166",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "1d176c38b3df1bd0",
        "type": "change",
        "z": "f3559f90766b0184",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtered_data.data.load",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 540,
        "wires": [
            [
                "de158e254d0e9e0f"
            ]
        ]
    },
    {
        "id": "de158e254d0e9e0f",
        "type": "http response",
        "z": "f3559f90766b0184",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "e1a4cf02b81fcc16",
        "type": "debug",
        "z": "f3559f90766b0184",
        "name": "debug 167",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "58d05188537d097c",
        "type": "function",
        "z": "f3559f90766b0184",
        "name": "coordinates",
        "func": "var data_json = global.get(\"filtered_data\");\n\nmsg.payload = [data_json.data.gps.latitude, data_json.data.gps.longitude];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 340,
        "wires": [
            [
                "a50b653253ed5f6a",
                "79ba7b829ccece0f"
            ]
        ]
    },
    {
        "id": "a50b653253ed5f6a",
        "type": "debug",
        "z": "f3559f90766b0184",
        "name": "debug 168",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "79ba7b829ccece0f",
        "type": "http response",
        "z": "f3559f90766b0184",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "8e5a45f370b97cf7",
        "type": "http in",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "url": "/realtime",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "7f9dcb7276b11522",
                "5ec4052d7c7ae40a"
            ]
        ]
    },
    {
        "id": "7d0aec952ef2821e",
        "type": "http response",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1140,
        "y": 780,
        "wires": []
    },
    {
        "id": "a756c9723aad153c",
        "type": "debug",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "debug 170",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 900,
        "wires": []
    },
    {
        "id": "7f9dcb7276b11522",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 780,
        "wires": [
            [
                "a839cc6139b9bbf4"
            ]
        ]
    },
    {
        "id": "a839cc6139b9bbf4",
        "type": "mysql",
        "z": "f3559f90766b0184",
        "d": true,
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 560,
        "y": 780,
        "wires": [
            [
                "b4dea4337bea69b9"
            ]
        ]
    },
    {
        "id": "b4dea4337bea69b9",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 780,
        "wires": [
            [
                "c053737065a60245"
            ]
        ]
    },
    {
        "id": "c053737065a60245",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "to realtime",
        "func": "var array_in = msg.payload;\nvar array_out1 = [];\nvar array_out2 = [];\n\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out1[i] = [array_in[i].timestamp, array_in[i].carga];\n    array_out2[i] = [array_in[i].timestamp, array_in[i].bateria];\n    \n}\n\nmsg.payload = {\"array1\": array_out1,\n                \"array2\": array_out2};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 780,
        "wires": [
            [
                "a756c9723aad153c",
                "7d0aec952ef2821e"
            ]
        ]
    },
    {
        "id": "9f86211d6ec8d31c",
        "type": "http response",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1160,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f5f632d4ca77dfe2",
        "type": "http in",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "",
        "url": "/download",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1000,
        "wires": [
            [
                "1e7d463076214afa"
            ]
        ]
    },
    {
        "id": "1e7d463076214afa",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "Query ",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "fa8d37d77be06be4"
            ]
        ]
    },
    {
        "id": "fa8d37d77be06be4",
        "type": "mysql",
        "z": "f3559f90766b0184",
        "d": true,
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 600,
        "y": 1000,
        "wires": [
            [
                "7fad086e222baa58"
            ]
        ]
    },
    {
        "id": "7fad086e222baa58",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\nmsg.filename = `${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1000,
        "wires": [
            [
                "b92fe70f56479329"
            ]
        ]
    },
    {
        "id": "b92fe70f56479329",
        "type": "function",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = {\"data\": csvString};\nmsg.descarga = 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "9f86211d6ec8d31c"
            ]
        ]
    },
    {
        "id": "5ec4052d7c7ae40a",
        "type": "debug",
        "z": "f3559f90766b0184",
        "d": true,
        "name": "debug 173",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 720,
        "wires": []
    }
]